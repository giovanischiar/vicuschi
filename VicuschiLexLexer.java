// Generated from VicuschiLex.g4 by ANTLR 4.7.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class VicuschiLexLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		IF=10, ENDIF=11, FOR=12, ENDFOR=13, CASE=14, WHEN=15, WHILE=16, ENDWHILE=17, 
		ENDCASE=18, CONTINUE=19, ENDF=20, RETURN=21, IMPORT=22, INT=23, FLOAT=24, 
		STRING=25, BOOLEAN=26, MAJOR=27, MINOR=28, EQUALS=29, MAJOR_EQUALS=30, 
		MINOR_EQUALS=31, DIFFERENT=32, ATTRIBUTION=33, INCREMENT=34, DECREMENT=35, 
		THEN=36, LOGICAL_AND=37, LOGICAL_OR=38, SEMICOLON=39, INDEX=40, EACH=41, 
		BOOL=42, NUMBER=43, WORD=44, ARRAY=45, INTERVAL=46, ID=47, S_COMMENTARY=48, 
		M_COMMENTARY=49, WS=50;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"IF", "ENDIF", "FOR", "ENDFOR", "CASE", "WHEN", "WHILE", "ENDWHILE", "ENDCASE", 
		"CONTINUE", "ENDF", "RETURN", "IMPORT", "INT", "FLOAT", "STRING", "BOOLEAN", 
		"MAJOR", "MINOR", "EQUALS", "MAJOR_EQUALS", "MINOR_EQUALS", "DIFFERENT", 
		"ATTRIBUTION", "INCREMENT", "DECREMENT", "THEN", "LOGICAL_AND", "LOGICAL_OR", 
		"SEMICOLON", "INDEX", "EACH", "BOOL", "NUMBER", "NUMBERTYPE", "WORD", 
		"ARRAY", "INTERVAL", "INCLUSIVE_TERMINAL", "NONINCLUSIVE_TERMINAL", "VAR", 
		"LETTER", "DIGIT", "SYMBOL", "ID", "S_COMMENTARY", "M_COMMENTARY", "WS"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'+'", "'-'", "'*'", "'/'", "'^'", "'('", "')'", "','", "'!'", "'if'", 
		"'endif'", "'for'", "'endfor'", "'case'", "'when'", "'while'", "'endwhile'", 
		"'endcase'", "'continue'", "'endf'", "'return'", "'import'", "'int'", 
		"'float'", "'string'", "'boolean'", "'>'", "'<'", "'=='", "'>='", "'<='", 
		"'!='", "'='", "'++'", "'--'", "'->'", "'&'", "'|'", "';'", null, "':'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, "IF", "ENDIF", 
		"FOR", "ENDFOR", "CASE", "WHEN", "WHILE", "ENDWHILE", "ENDCASE", "CONTINUE", 
		"ENDF", "RETURN", "IMPORT", "INT", "FLOAT", "STRING", "BOOLEAN", "MAJOR", 
		"MINOR", "EQUALS", "MAJOR_EQUALS", "MINOR_EQUALS", "DIFFERENT", "ATTRIBUTION", 
		"INCREMENT", "DECREMENT", "THEN", "LOGICAL_AND", "LOGICAL_OR", "SEMICOLON", 
		"INDEX", "EACH", "BOOL", "NUMBER", "WORD", "ARRAY", "INTERVAL", "ID", 
		"S_COMMENTARY", "M_COMMENTARY", "WS"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public VicuschiLexLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "VicuschiLex.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\64\u01bc\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\3\2\3\2\3\3\3\3"+
		"\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\13"+
		"\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16"+
		"\3\16\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21"+
		"\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23"+
		"\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24"+
		"\3\24\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27"+
		"\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31"+
		"\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33"+
		"\3\33\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3\36\3\37\3\37\3\37\3 \3"+
		" \3 \3!\3!\3!\3\"\3\"\3#\3#\3#\3$\3$\3$\3%\3%\3%\3&\3&\3\'\3\'\3(\3(\3"+
		")\3)\3)\3)\3)\3)\6)\u0119\n)\r)\16)\u011a\3)\3)\3)\3)\5)\u0121\n)\3*\3"+
		"*\3+\3+\3+\3+\3+\5+\u012a\n+\3,\5,\u012d\n,\3,\3,\3-\3-\6-\u0133\n-\r"+
		"-\16-\u0134\3-\6-\u0138\n-\r-\16-\u0139\3-\3-\7-\u013e\n-\f-\16-\u0141"+
		"\13-\3-\6-\u0144\n-\r-\16-\u0145\5-\u0148\n-\3.\3.\3.\3.\3.\7.\u014f\n"+
		".\f.\16.\u0152\13.\3.\3.\3/\3/\3/\3/\5/\u015a\n/\3/\7/\u015d\n/\f/\16"+
		"/\u0160\13/\3/\3/\3\60\3\60\5\60\u0166\n\60\3\61\3\61\6\61\u016a\n\61"+
		"\r\61\16\61\u016b\3\61\3\61\5\61\u0170\n\61\3\61\6\61\u0173\n\61\r\61"+
		"\16\61\u0174\3\61\3\61\3\62\3\62\6\62\u017b\n\62\r\62\16\62\u017c\3\62"+
		"\3\62\5\62\u0181\n\62\3\62\6\62\u0184\n\62\r\62\16\62\u0185\3\62\3\62"+
		"\3\63\3\63\3\63\5\63\u018d\n\63\3\64\3\64\3\65\3\65\3\66\3\66\3\67\3\67"+
		"\3\67\7\67\u0198\n\67\f\67\16\67\u019b\13\67\38\38\38\38\78\u01a1\n8\f"+
		"8\168\u01a4\138\38\38\39\39\39\39\79\u01ac\n9\f9\169\u01af\139\39\39\3"+
		"9\39\39\3:\6:\u01b7\n:\r:\16:\u01b8\3:\3:\3\u01ad\2;\3\3\5\4\7\5\t\6\13"+
		"\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'"+
		"\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'"+
		"M(O)Q*S+U,W-Y\2[.]/_\60a\2c\2e\2g\2i\2k\2m\61o\62q\63s\64\3\2\b\4\2--"+
		"//\4\2C\\c|\3\2\62;\13\2##((*\61<@]]__aa}\177\u02c8\u02c8\4\2\f\f\17\17"+
		"\5\2\13\f\17\17\"\"\2\u01d3\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3"+
		"\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2"+
		"\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37"+
		"\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3"+
		"\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2"+
		"\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C"+
		"\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2"+
		"\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2"+
		"\2_\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\3u\3\2\2\2\5w"+
		"\3\2\2\2\7y\3\2\2\2\t{\3\2\2\2\13}\3\2\2\2\r\177\3\2\2\2\17\u0081\3\2"+
		"\2\2\21\u0083\3\2\2\2\23\u0085\3\2\2\2\25\u0087\3\2\2\2\27\u008a\3\2\2"+
		"\2\31\u0090\3\2\2\2\33\u0094\3\2\2\2\35\u009b\3\2\2\2\37\u00a0\3\2\2\2"+
		"!\u00a5\3\2\2\2#\u00ab\3\2\2\2%\u00b4\3\2\2\2\'\u00bc\3\2\2\2)\u00c5\3"+
		"\2\2\2+\u00ca\3\2\2\2-\u00d1\3\2\2\2/\u00d8\3\2\2\2\61\u00dc\3\2\2\2\63"+
		"\u00e2\3\2\2\2\65\u00e9\3\2\2\2\67\u00f1\3\2\2\29\u00f3\3\2\2\2;\u00f5"+
		"\3\2\2\2=\u00f8\3\2\2\2?\u00fb\3\2\2\2A\u00fe\3\2\2\2C\u0101\3\2\2\2E"+
		"\u0103\3\2\2\2G\u0106\3\2\2\2I\u0109\3\2\2\2K\u010c\3\2\2\2M\u010e\3\2"+
		"\2\2O\u0110\3\2\2\2Q\u0120\3\2\2\2S\u0122\3\2\2\2U\u0129\3\2\2\2W\u012c"+
		"\3\2\2\2Y\u0147\3\2\2\2[\u0149\3\2\2\2]\u0155\3\2\2\2_\u0165\3\2\2\2a"+
		"\u0167\3\2\2\2c\u0178\3\2\2\2e\u018c\3\2\2\2g\u018e\3\2\2\2i\u0190\3\2"+
		"\2\2k\u0192\3\2\2\2m\u0194\3\2\2\2o\u019c\3\2\2\2q\u01a7\3\2\2\2s\u01b6"+
		"\3\2\2\2uv\7-\2\2v\4\3\2\2\2wx\7/\2\2x\6\3\2\2\2yz\7,\2\2z\b\3\2\2\2{"+
		"|\7\61\2\2|\n\3\2\2\2}~\7`\2\2~\f\3\2\2\2\177\u0080\7*\2\2\u0080\16\3"+
		"\2\2\2\u0081\u0082\7+\2\2\u0082\20\3\2\2\2\u0083\u0084\7.\2\2\u0084\22"+
		"\3\2\2\2\u0085\u0086\7#\2\2\u0086\24\3\2\2\2\u0087\u0088\7k\2\2\u0088"+
		"\u0089\7h\2\2\u0089\26\3\2\2\2\u008a\u008b\7g\2\2\u008b\u008c\7p\2\2\u008c"+
		"\u008d\7f\2\2\u008d\u008e\7k\2\2\u008e\u008f\7h\2\2\u008f\30\3\2\2\2\u0090"+
		"\u0091\7h\2\2\u0091\u0092\7q\2\2\u0092\u0093\7t\2\2\u0093\32\3\2\2\2\u0094"+
		"\u0095\7g\2\2\u0095\u0096\7p\2\2\u0096\u0097\7f\2\2\u0097\u0098\7h\2\2"+
		"\u0098\u0099\7q\2\2\u0099\u009a\7t\2\2\u009a\34\3\2\2\2\u009b\u009c\7"+
		"e\2\2\u009c\u009d\7c\2\2\u009d\u009e\7u\2\2\u009e\u009f\7g\2\2\u009f\36"+
		"\3\2\2\2\u00a0\u00a1\7y\2\2\u00a1\u00a2\7j\2\2\u00a2\u00a3\7g\2\2\u00a3"+
		"\u00a4\7p\2\2\u00a4 \3\2\2\2\u00a5\u00a6\7y\2\2\u00a6\u00a7\7j\2\2\u00a7"+
		"\u00a8\7k\2\2\u00a8\u00a9\7n\2\2\u00a9\u00aa\7g\2\2\u00aa\"\3\2\2\2\u00ab"+
		"\u00ac\7g\2\2\u00ac\u00ad\7p\2\2\u00ad\u00ae\7f\2\2\u00ae\u00af\7y\2\2"+
		"\u00af\u00b0\7j\2\2\u00b0\u00b1\7k\2\2\u00b1\u00b2\7n\2\2\u00b2\u00b3"+
		"\7g\2\2\u00b3$\3\2\2\2\u00b4\u00b5\7g\2\2\u00b5\u00b6\7p\2\2\u00b6\u00b7"+
		"\7f\2\2\u00b7\u00b8\7e\2\2\u00b8\u00b9\7c\2\2\u00b9\u00ba\7u\2\2\u00ba"+
		"\u00bb\7g\2\2\u00bb&\3\2\2\2\u00bc\u00bd\7e\2\2\u00bd\u00be\7q\2\2\u00be"+
		"\u00bf\7p\2\2\u00bf\u00c0\7v\2\2\u00c0\u00c1\7k\2\2\u00c1\u00c2\7p\2\2"+
		"\u00c2\u00c3\7w\2\2\u00c3\u00c4\7g\2\2\u00c4(\3\2\2\2\u00c5\u00c6\7g\2"+
		"\2\u00c6\u00c7\7p\2\2\u00c7\u00c8\7f\2\2\u00c8\u00c9\7h\2\2\u00c9*\3\2"+
		"\2\2\u00ca\u00cb\7t\2\2\u00cb\u00cc\7g\2\2\u00cc\u00cd\7v\2\2\u00cd\u00ce"+
		"\7w\2\2\u00ce\u00cf\7t\2\2\u00cf\u00d0\7p\2\2\u00d0,\3\2\2\2\u00d1\u00d2"+
		"\7k\2\2\u00d2\u00d3\7o\2\2\u00d3\u00d4\7r\2\2\u00d4\u00d5\7q\2\2\u00d5"+
		"\u00d6\7t\2\2\u00d6\u00d7\7v\2\2\u00d7.\3\2\2\2\u00d8\u00d9\7k\2\2\u00d9"+
		"\u00da\7p\2\2\u00da\u00db\7v\2\2\u00db\60\3\2\2\2\u00dc\u00dd\7h\2\2\u00dd"+
		"\u00de\7n\2\2\u00de\u00df\7q\2\2\u00df\u00e0\7c\2\2\u00e0\u00e1\7v\2\2"+
		"\u00e1\62\3\2\2\2\u00e2\u00e3\7u\2\2\u00e3\u00e4\7v\2\2\u00e4\u00e5\7"+
		"t\2\2\u00e5\u00e6\7k\2\2\u00e6\u00e7\7p\2\2\u00e7\u00e8\7i\2\2\u00e8\64"+
		"\3\2\2\2\u00e9\u00ea\7d\2\2\u00ea\u00eb\7q\2\2\u00eb\u00ec\7q\2\2\u00ec"+
		"\u00ed\7n\2\2\u00ed\u00ee\7g\2\2\u00ee\u00ef\7c\2\2\u00ef\u00f0\7p\2\2"+
		"\u00f0\66\3\2\2\2\u00f1\u00f2\7@\2\2\u00f28\3\2\2\2\u00f3\u00f4\7>\2\2"+
		"\u00f4:\3\2\2\2\u00f5\u00f6\7?\2\2\u00f6\u00f7\7?\2\2\u00f7<\3\2\2\2\u00f8"+
		"\u00f9\7@\2\2\u00f9\u00fa\7?\2\2\u00fa>\3\2\2\2\u00fb\u00fc\7>\2\2\u00fc"+
		"\u00fd\7?\2\2\u00fd@\3\2\2\2\u00fe\u00ff\7#\2\2\u00ff\u0100\7?\2\2\u0100"+
		"B\3\2\2\2\u0101\u0102\7?\2\2\u0102D\3\2\2\2\u0103\u0104\7-\2\2\u0104\u0105"+
		"\7-\2\2\u0105F\3\2\2\2\u0106\u0107\7/\2\2\u0107\u0108\7/\2\2\u0108H\3"+
		"\2\2\2\u0109\u010a\7/\2\2\u010a\u010b\7@\2\2\u010bJ\3\2\2\2\u010c\u010d"+
		"\7(\2\2\u010dL\3\2\2\2\u010e\u010f\7~\2\2\u010fN\3\2\2\2\u0110\u0111\7"+
		"=\2\2\u0111P\3\2\2\2\u0112\u0113\7]\2\2\u0113\u0114\5m\67\2\u0114\u0115"+
		"\7_\2\2\u0115\u0121\3\2\2\2\u0116\u0118\7]\2\2\u0117\u0119\5i\65\2\u0118"+
		"\u0117\3\2\2\2\u0119\u011a\3\2\2\2\u011a\u0118\3\2\2\2\u011a\u011b\3\2"+
		"\2\2\u011b\u011c\3\2\2\2\u011c\u011d\7_\2\2\u011d\u0121\3\2\2\2\u011e"+
		"\u011f\7]\2\2\u011f\u0121\7_\2\2\u0120\u0112\3\2\2\2\u0120\u0116\3\2\2"+
		"\2\u0120\u011e\3\2\2\2\u0121R\3\2\2\2\u0122\u0123\7<\2\2\u0123T\3\2\2"+
		"\2\u0124\u0125\7{\2\2\u0125\u0126\7g\2\2\u0126\u012a\7u\2\2\u0127\u0128"+
		"\7p\2\2\u0128\u012a\7q\2\2\u0129\u0124\3\2\2\2\u0129\u0127\3\2\2\2\u012a"+
		"V\3\2\2\2\u012b\u012d\t\2\2\2\u012c\u012b\3\2\2\2\u012c\u012d\3\2\2\2"+
		"\u012d\u012e\3\2\2\2\u012e\u012f\5Y-\2\u012fX\3\2\2\2\u0130\u0132\7\60"+
		"\2\2\u0131\u0133\5i\65\2\u0132\u0131\3\2\2\2\u0133\u0134\3\2\2\2\u0134"+
		"\u0132\3\2\2\2\u0134\u0135\3\2\2\2\u0135\u0148\3\2\2\2\u0136\u0138\5i"+
		"\65\2\u0137\u0136\3\2\2\2\u0138\u0139\3\2\2\2\u0139\u0137\3\2\2\2\u0139"+
		"\u013a\3\2\2\2\u013a\u013b\3\2\2\2\u013b\u013f\7\60\2\2\u013c\u013e\5"+
		"i\65\2\u013d\u013c\3\2\2\2\u013e\u0141\3\2\2\2\u013f\u013d\3\2\2\2\u013f"+
		"\u0140\3\2\2\2\u0140\u0148\3\2\2\2\u0141\u013f\3\2\2\2\u0142\u0144\5i"+
		"\65\2\u0143\u0142\3\2\2\2\u0144\u0145\3\2\2\2\u0145\u0143\3\2\2\2\u0145"+
		"\u0146\3\2\2\2\u0146\u0148\3\2\2\2\u0147\u0130\3\2\2\2\u0147\u0137\3\2"+
		"\2\2\u0147\u0143\3\2\2\2\u0148Z\3\2\2\2\u0149\u0150\7$\2\2\u014a\u014f"+
		"\5W,\2\u014b\u014f\5g\64\2\u014c\u014f\5s:\2\u014d\u014f\5k\66\2\u014e"+
		"\u014a\3\2\2\2\u014e\u014b\3\2\2\2\u014e\u014c\3\2\2\2\u014e\u014d\3\2"+
		"\2\2\u014f\u0152\3\2\2\2\u0150\u014e\3\2\2\2\u0150\u0151\3\2\2\2\u0151"+
		"\u0153\3\2\2\2\u0152\u0150\3\2\2\2\u0153\u0154\7$\2\2\u0154\\\3\2\2\2"+
		"\u0155\u0156\7}\2\2\u0156\u015e\5e\63\2\u0157\u0159\7.\2\2\u0158\u015a"+
		"\5s:\2\u0159\u0158\3\2\2\2\u0159\u015a\3\2\2\2\u015a\u015b\3\2\2\2\u015b"+
		"\u015d\5e\63\2\u015c\u0157\3\2\2\2\u015d\u0160\3\2\2\2\u015e\u015c\3\2"+
		"\2\2\u015e\u015f\3\2\2\2\u015f\u0161\3\2\2\2\u0160\u015e\3\2\2\2\u0161"+
		"\u0162\7\177\2\2\u0162^\3\2\2\2\u0163\u0166\5a\61\2\u0164\u0166\5c\62"+
		"\2\u0165\u0163\3\2\2\2\u0165\u0164\3\2\2\2\u0166`\3\2\2\2\u0167\u0169"+
		"\7]\2\2\u0168\u016a\5i\65\2\u0169\u0168\3\2\2\2\u016a\u016b\3\2\2\2\u016b"+
		"\u0169\3\2\2\2\u016b\u016c\3\2\2\2\u016c\u016d\3\2\2\2\u016d\u016f\7."+
		"\2\2\u016e\u0170\5s:\2\u016f\u016e\3\2\2\2\u016f\u0170\3\2\2\2\u0170\u0172"+
		"\3\2\2\2\u0171\u0173\5i\65\2\u0172\u0171\3\2\2\2\u0173\u0174\3\2\2\2\u0174"+
		"\u0172\3\2\2\2\u0174\u0175\3\2\2\2\u0175\u0176\3\2\2\2\u0176\u0177\7_"+
		"\2\2\u0177b\3\2\2\2\u0178\u017a\7]\2\2\u0179\u017b\5i\65\2\u017a\u0179"+
		"\3\2\2\2\u017b\u017c\3\2\2\2\u017c\u017a\3\2\2\2\u017c\u017d\3\2\2\2\u017d"+
		"\u017e\3\2\2\2\u017e\u0180\7.\2\2\u017f\u0181\5s:\2\u0180\u017f\3\2\2"+
		"\2\u0180\u0181\3\2\2\2\u0181\u0183\3\2\2\2\u0182\u0184\5i\65\2\u0183\u0182"+
		"\3\2\2\2\u0184\u0185\3\2\2\2\u0185\u0183\3\2\2\2\u0185\u0186\3\2\2\2\u0186"+
		"\u0187\3\2\2\2\u0187\u0188\7+\2\2\u0188d\3\2\2\2\u0189\u018d\5\65\33\2"+
		"\u018a\u018d\5W,\2\u018b\u018d\5m\67\2\u018c\u0189\3\2\2\2\u018c\u018a"+
		"\3\2\2\2\u018c\u018b\3\2\2\2\u018df\3\2\2\2\u018e\u018f\t\3\2\2\u018f"+
		"h\3\2\2\2\u0190\u0191\t\4\2\2\u0191j\3\2\2\2\u0192\u0193\t\5\2\2\u0193"+
		"l\3\2\2\2\u0194\u0199\5g\64\2\u0195\u0198\5i\65\2\u0196\u0198\5g\64\2"+
		"\u0197\u0195\3\2\2\2\u0197\u0196\3\2\2\2\u0198\u019b\3\2\2\2\u0199\u0197"+
		"\3\2\2\2\u0199\u019a\3\2\2\2\u019an\3\2\2\2\u019b\u0199\3\2\2\2\u019c"+
		"\u019d\7\61\2\2\u019d\u019e\7\61\2\2\u019e\u01a2\3\2\2\2\u019f\u01a1\n"+
		"\6\2\2\u01a0\u019f\3\2\2\2\u01a1\u01a4\3\2\2\2\u01a2\u01a0\3\2\2\2\u01a2"+
		"\u01a3\3\2\2\2\u01a3\u01a5\3\2\2\2\u01a4\u01a2\3\2\2\2\u01a5\u01a6\b8"+
		"\2\2\u01a6p\3\2\2\2\u01a7\u01a8\7\61\2\2\u01a8\u01a9\7,\2\2\u01a9\u01ad"+
		"\3\2\2\2\u01aa\u01ac\13\2\2\2\u01ab\u01aa\3\2\2\2\u01ac\u01af\3\2\2\2"+
		"\u01ad\u01ae\3\2\2\2\u01ad\u01ab\3\2\2\2\u01ae\u01b0\3\2\2\2\u01af\u01ad"+
		"\3\2\2\2\u01b0\u01b1\7,\2\2\u01b1\u01b2\7\61\2\2\u01b2\u01b3\3\2\2\2\u01b3"+
		"\u01b4\b9\2\2\u01b4r\3\2\2\2\u01b5\u01b7\t\7\2\2\u01b6\u01b5\3\2\2\2\u01b7"+
		"\u01b8\3\2\2\2\u01b8\u01b6\3\2\2\2\u01b8\u01b9\3\2\2\2\u01b9\u01ba\3\2"+
		"\2\2\u01ba\u01bb\b:\2\2\u01bbt\3\2\2\2\35\2\u011a\u0120\u0129\u012c\u0134"+
		"\u0139\u013f\u0145\u0147\u014e\u0150\u0159\u015e\u0165\u016b\u016f\u0174"+
		"\u017c\u0180\u0185\u018c\u0197\u0199\u01a2\u01ad\u01b8\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}